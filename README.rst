Citi Bike share analysis
*************************
Purpose of this project is to perform batch and stream processing on Citi Bike Share Trip data. 

Analysis report has been published for:
---------------------------------------
* Trend analysis by gender
* Trend analysis by age
* Bike Availability alert

DataSet
=======
* Download the data from https://s3.amazonaws.com/tripdata/201609-citibike-tripdata.zip
* Unzip the file. This CSV will be the input for batch mode.

Visualization
=============
* Run the python scripts with respective CSV files generated by Flink batch jobs for visualization

Installation
============
* Download Flink 1.1.3
* Download Elastic Search 2.3.5
* Download Kibana 4.5.4
* Install Kibana appsense plugin
* Download Maven 3.0

Build and Deploy
================
* Clone code from GIT repository

. Go to code/flink-java-project.
* Run mvn clean package

STEP1 Build java code
---------------------
*  
mvn clean package

STEP2 Prepare data

------------------ 
* Use wget or bitsadmin to get trips data from 
https://s3.amazonaws.com/tripdata/201609-citibike-tripdata.zip


* Flink is unable to process ZIP directly. So unzip the data file.


 

STEP 3 Create Elastic Search Index

-----------------------------------
* Start Kibana


* Go to http://localhost:5601/appsense


* Create the citi-bikes index (Refer data instruction in GIT)


* Start Elastic Search




STEP 4 Run Flink
---------------------------- 
Start flink server 

flink run -c com.citibike.batch.BikeRentTrendByAge /pathtojar/flink-java-project-0.1.jar --input <location of tripcsv> --output <output csv file location>

flink run -c com.citibike.batch.BikeRentTrendByGender /pathtojar/flink-java-project-0.1.jar --input <location of tripcsv> --output <output csv file location>

flink run -c com.citibike.stream.LiveStationStatusStream /pathtojar/flink-java-project-0.1.jar --input https://feeds.citibikenyc.com/stations/stations.json